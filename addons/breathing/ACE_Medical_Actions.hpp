class ACE_Medical_Actions {
    class Advanced {
        class Pulseoximeter {
            displayName = $STR_kat_aceBreathing_Pulseoximeter_Display;
            displayNameProgress = $STR_kat_aceBreathing_placing;
            category = "examine";
            treatmentLocations[] = {"All"};
            allowedSelections[] = {"hand_l", "hand_r"};
            allowSelfTreatment = 0;
            requiredMedic = 1;
            treatmentTime = 2;
            items[] = {"KAT_Pulseoximeter"};
            condition = "missionNamespace getVariable 'kat_aceBreathing_enable'";
            patientStateCondition = 0;
            callbackSuccess = "[_player, _target] call kat_aceBreathing_fnc_treatmentAdvanced_pulseoximeter";
            callbackFailure = "";
            callbackProgress = "";
            itemConsumed = 1;
            animationPatient = "";
            animationPatientUnconscious = "AinjPpneMstpSnonWrflDnon_rolltoback";
            animationPatientUnconsciousExcludeOn[] = {"ainjppnemstpsnonwrfldnon"};
            animationCaller = "AinvPknlMstpSlayWrflDnon_medicOther";
            animationCallerProne = "AinvPpneMstpSlayW[wpn]Dnon_medicOther";
            animationCallerSelf = "AinvPknlMstpSlayW[wpn]Dnon_medic";
            animationCallerSelfProne = "AinvPpneMstpSlayW[wpn]Dnon_medic";
            litter[] = {};
        };
        class RemovePulseoximeter {
            displayName = $STR_kat_aceBreathing_Pulseoximeter_Display_Remove;
            displayNameProgress = $STR_kat_aceBreathing_remove;
            category = "examine";
            treatmentLocations[] = {"All"};
            allowedSelections[] = {"hand_l", "hand_r"};
            allowSelfTreatment = 0;
            requiredMedic = 1;
            treatmentTime = 2;
            items[] = {};
            condition = "_target getVariable ['kat_aceBreathing_pulseoximeter', false]";
            patientStateCondition = 0;
            callbackSuccess = "[_player, _target] call kat_aceBreathing_fnc_treatmentAdvanced_removePulseoximeter";
            callbackFailure = "";
            callbackProgress = "";
            itemConsumed = 0;
            animationPatient = "";
            animationPatientUnconscious = "AinjPpneMstpSnonWrflDnon_rolltoback";
            animationPatientUnconsciousExcludeOn[] = {"ainjppnemstpsnonwrfldnon"};
            animationCaller = "AinvPknlMstpSlayWrflDnon_medicOther";
            animationCallerProne = "AinvPpneMstpSlayW[wpn]Dnon_medicOther";
            animationCallerSelf = "AinvPknlMstpSlayW[wpn]Dnon_medic";
            animationCallerSelfProne = "AinvPpneMstpSlayW[wpn]Dnon_medic";
            litter[] = {};
        };
        class ChestSeal {
            displayName = $STR_kat_aceBreathing_pneumothorax_display;
            displayNameProgress = $STR_kat_aceBreathing_treating;
            category = "advanced";
            treatmentLocations[] = {"All"};
            allowedSelections[] = {"body"};
            allowSelfTreatment = 0;
            requiredMedic = 2;
            treatmentTime = 7;
            items[] = {"KAT_ChestSeal"};
            condition = "_target getVariable ['ace_medical_airwayCollapsed', false]";
            patientStateCondition = 0;
            callbackSuccess = "[_player, _target] call kat_aceBreathing_fnc_treatmentAdvanced_chestSeal";
            callbackFailure = "";
            callbackProgress = "";
            itemConsumed = 1;
            animationPatient = "";
            animationPatientUnconscious = "AinjPpneMstpSnonWrflDnon_rolltoback";
            animationPatientUnconsciousExcludeOn[] = {"ainjppnemstpsnonwrfldnon"};
            animationCaller = "AinvPknlMstpSlayWrflDnon_medicOther";
            animationCallerProne = "AinvPpneMstpSlayW[wpn]Dnon_medicOther";
            animationCallerSelf = "AinvPknlMstpSlayW[wpn]Dnon_medic";
            animationCallerSelfProne = "AinvPpneMstpSlayW[wpn]Dnon_medic";
            litter[] = {};
        };
    };
};
